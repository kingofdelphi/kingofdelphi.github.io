{"version":3,"sources":["pages/Perceptron/styles.module.scss","pages/Line/styles.module.scss","components/MenuSelect/index.tsx","components/Input/index.tsx","engine/regression.tsx","engine/common.tsx","pages/Regression/index.tsx","engine/perceptron.tsx","pages/Perceptron/index.tsx","pages/Line/index.tsx","App.tsx","serviceWorker.ts","index.tsx","pages/Regression/styles.module.scss"],"names":["module","exports","Ul","styled","ul","Li","li","props","selected","MenuSelect","clickHandler","selectedChoice","choices","map","choice","key","id","onClick","href","path","label","Label","Input","className","type","value","min","max","onChange","e","target","defaultProps","undefined","hypothesis","coefficients","datum","MathJs","stepSolve","trainingSet","output","learningRate","errorDelta","cost","i","length","push","deltaCoefficients","_","xis","d","denormalizeData","dataset","featureMeta","featureValue","featureIndex","normInfo","normalizeData","forEach","data","info","x_coords","y_coords","buildRowFromXCoord","x_coord","degree","Array","fill","Math","pow","trainingInfo","trainingData","trainingOutput","solveAnimationInfo","regressionLines","segmentCount","startSolve","fabricCanvas","iterations","trainingInputNormInfo","trainingOutputNormInfo","reduce","acc","outputMeta","fabric","Line","add","message","Text","updater","iterationsLeft","result","regData","regOutput","x","row","set","text","modelToWorldInput","modelToWorldOutput","0","pts","ycords","stroke","strokeWidth","objectCaching","x1","y1","x2","y2","solve","renderAll","animFrameId","window","requestAnimationFrame","stopSolve","cancelAnimationFrame","RadioButton","button","color","Button","SInput","Main","div","Regression","ref","useRef","useState","setFabricCanvas","stateRef","class","reset","clear","useEffect","node","current","canvas","document","createElement","append","bounds","getBoundingClientRect","fcanvas","Canvas","setWidth","width","setHeight","height","state","on","event","pointer","y","circle","Circle","left","r","top","radius","updateFabricCanvas","dispose","cls","setClass","setIterations","setLearningRate","setDegree","styles","menu","newClass","changeClass","alert","v","new_coefficients","deltaOutput","console","log","user_data","user_output","buildFeatureVectorFromPoint","point","remove","pop","pointInfo","gety","C","A","B","det","f","sqrt","points","pointsRev","k","merge","pointsA","pointsB","reverse","concat","points1","points2","generatePointsFromCoefficients","boundaryInfo","pt1","pt2","line","Perceptron","pos","filter","neg","featureCount","perpendicular","ActionButtons","updateLine","angle","distance","getWidth","getHeight","radians","PI","hypot","w","cos","sin","screenCenter","lineMid","rotated","leftPoint","rightPoint","setAngle","setDistance","floor","innerHeight","innerWidth","sliderRange","xAxis","yAxis","drawAxes","GridContainer","App","setSelectedChoice","item","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4c34b431.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fabric-wrapper\":\"styles_fabric-wrapper__3dS1m\",\"menu\":\"styles_menu__3HQKo\",\"cls-buttons\":\"styles_cls-buttons__3H89l\",\"action-buttons\":\"styles_action-buttons__2tX2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fabric-wrapper\":\"styles_fabric-wrapper__2Wu26\",\"menu\":\"styles_menu__dmKx4\",\"cls-buttons\":\"styles_cls-buttons__26VZ_\"};","import React from \"react\";\n\nimport styled from 'styled-components';\n\ntype Props = {\n  clickHandler: any,\n  selectedChoice: string,\n  choices: Array<{\n    id: string\n    label: string\n    path: string\n  }>\n}\n\nconst Ul = styled.ul`\n  list-style-type: none;\n  font-size: 1.3rem;\n`;\n\ninterface LiProps {\n  readonly selected: boolean;\n};\n\nconst Li = styled.li<LiProps>`\n    padding: 5px 40px;\n    background: ${props => props.selected ? 'silver' : 'auto'};\n    a {\n      text-decoration: none;\n      color: inherit;\n    }\n`;\n\nfunction MenuSelect(props: Props) {\n  const { clickHandler, selectedChoice, choices } = props;\n  return (\n    <Ul>\n      {\n        choices.map(choice => (\n          <Li\n            key={choice.id}\n            selected={choice.id === selectedChoice}\n            onClick={() => clickHandler(choice.id)}\n          >\n            <a href={`#${choice.path}`}>{choice.label}</a>\n          </Li>\n        ))\n      }\n    </Ul>\n  );\n};\n\nexport default MenuSelect;","import React from \"react\";\n\nimport styled, { StyledComponent } from 'styled-components';\n\nconst Label:StyledComponent<any, any> = styled.label`\n  display: flex;\n  align-items: center;\n  span {\n    font-weight: 600;\n  }\n  input {\n    font-size: 1.1rem;\n    margin-left: 10px;\n  }\n`;\n\ntype Props = {\n  className?: string;\n  type: string;\n  label: string;\n  value: string;\n  min?: string;\n  max?: string;\n  onChange: (value: string) => void;\n}\n\nfunction Input(props: Props) {\n  const { className, type, label, value, min, max, onChange } = props;\n  return (\n    <Label className={className}>\n      <span>{label}</span>\n      <input type={type} value={value} min={min} max={max} onChange={(e) => onChange(e.target.value)} />\n    </Label>\n  );\n};\n\nInput.defaultProps = {\n  type: undefined,\n};\n\nexport default Input;\n","import * as MathJs from 'mathjs';\nimport { Row } from './common';\n\nconst hypothesis = (coefficients: Array<number>, datum: Row) => {\n  return MathJs.dot(coefficients, datum);\n};\n\nconst stepSolve = (coefficients: Array<number>, trainingSet: Array<Row>, output: Array<number>, learningRate: number) => {\n  const errorDelta: Array<number> = [];\n  let cost = 0;\n\n  for (let i = 0; i < trainingSet.length; ++i) {\n    errorDelta.push(hypothesis(coefficients, trainingSet[i]) - output[i]);\n    cost += errorDelta[i] * errorDelta[i];\n  }\n  // err = (h(xi) - yi)^2 + ....\n  // de/d(ci) = 2*(h(xj)-yj)*xji\n  const deltaCoefficients = coefficients.map((_, i) => {\n    const xis = trainingSet.map(d => d[i]);\n    return MathJs.dot(errorDelta, xis);\n  });\n\n  return {\n    cost,\n    coefficients: MathJs.add(coefficients, MathJs.multiply(deltaCoefficients, -learningRate)) as Array<number>\n  };\n};\n\nexport default stepSolve;\n\nexport {\n  hypothesis,\n}","import * as MathJs from 'mathjs';\n\nexport type Row = Array<number>;\n\nexport interface NormalizationMeta {\n  min: number;\n  max: number;\n}\n\nexport interface FeatureNormalizationMeta {\n  [key: number]: NormalizationMeta\n}\n\n// data is a column of features\nexport const getNormalizationMeta = (data: Array<number>) => {\n  const outputMeta: NormalizationMeta = {\n    min: MathJs.min(data),\n    max: MathJs.max(data),\n  };\n  \n  return outputMeta;\n};\n\n// dataset is array of world point\nexport const denormalizeData = (dataset: Array<Row>, featureMeta: FeatureNormalizationMeta) => {\n  const denormalizedData = dataset.map(datum => {\n    return datum.map((featureValue, featureIndex) => {\n      const normInfo = featureMeta[featureIndex];\n      return normInfo.min + featureValue * (normInfo.max - normInfo.min + 1);\n    });\n  });\n  return {\n    dataset: denormalizedData,\n  }\n};\n\n// dataset is array of world point\nexport const normalizeData = (dataset: Array<Row>) => {\n  const featureMeta : FeatureNormalizationMeta = {};\n  MathJs.transpose(dataset).forEach((d, i) => {\n    const info = getNormalizationMeta(d);\n    featureMeta[i] = info;\n  });\n  const normalizedDataset = dataset.map(datum => {\n    return datum.map((featureValue, featureIndex) => {\n      const normInfo = featureMeta[featureIndex];\n      return (featureValue - normInfo.min) / (normInfo.max - normInfo.min + 1);\n    });\n  });\n\n  return {\n    dataset: normalizedDataset,\n    featureMeta,\n  };\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport styled from 'styled-components';\n\nimport Input from \"../../components/Input\";\n\nimport stepSolve, { hypothesis } from '../../engine/regression';\nimport { NormalizationMeta, FeatureNormalizationMeta, Row, normalizeData, denormalizeData } from '../../engine/common';\n\nimport styles from './styles.module.scss';\n\nlet x_coords : Array<number> = [];\nlet y_coords : Array<number> = [];\n\nfunction updateFabricCanvas(canvas: fabric.Canvas, state: { [key:string]: any }) {\n  const mouseDownHandler = (event: fabric.IEvent) => {\n    const x = event.pointer!.x;\n    const y = event.pointer!.y;\n    x_coords.push(x);\n    y_coords.push(y);\n    const r = 20;\n    const circle = new fabric.Circle({\n      left: x - r / 2,\n      top: y - r / 2,\n      radius: 4,\n      stroke: state.class,\n      strokeWidth: r,\n      fill: ''\n    });\n    canvas.add(circle);\n  };\n  canvas.on({\n    'mouse:down': mouseDownHandler\n  });\n}\n\n\nconst buildRowFromXCoord = (x_coord: number, degree: number) => {\n    return new Array(degree + 1).fill(0).map((_, i) => Math.pow(x_coord, i));\n};\n\ninterface TrainingInfo {\n  trainingData: Array<Row>;\n  trainingOutput: Array<number>;\n  coefficients: Array<number>;\n  featureMeta: FeatureNormalizationMeta;\n  outputMeta?: NormalizationMeta;\n};\n\nconst trainingInfo: TrainingInfo = {\n  trainingData: [],\n  trainingOutput: [],\n  coefficients: [],\n  featureMeta: {}\n};\n\ninterface SolveAnimationInfo {\n  regressionLines: Array<fabric.Line>;\n  segmentCount: number;\n  message?: fabric.Text;\n  animFrameId?: number;\n};\n\nconst solveAnimationInfo: SolveAnimationInfo = {\n  regressionLines: [],\n  segmentCount: 500\n};\n\nfunction solve(fabricCanvas: fabric.Canvas, iterationsLeft: number, learningRate: number, degree: number) {\n  const { trainingData, trainingOutput, coefficients, featureMeta, outputMeta } = trainingInfo;\n  const result = stepSolve(coefficients, trainingData, trainingOutput, learningRate);\n  trainingInfo.coefficients = result.coefficients;\n\n  const regData: Array<Row> = [];\n  const regOutput: Array<number> = [];\n  const { segmentCount, regressionLines } = solveAnimationInfo;\n  const L = -10, R = 10;\n  for (let i = 0; i < segmentCount; ++i) {\n    const x = i === 0 ? L : L + (R - L) * i / (segmentCount - 1);\n    regData.push([x]);\n    const row = buildRowFromXCoord(x, degree);\n    regOutput.push(hypothesis(coefficients, row));\n  }\n\n  solveAnimationInfo.message!.set({\n    text: `Iterations Left: ${iterationsLeft}`\n  });\n\n  const modelToWorldInput = denormalizeData(regData, featureMeta);\n  const modelToWorldOutput = denormalizeData(regOutput.map(d => [d]), { 0: outputMeta! })\n\n  const pts = modelToWorldInput.dataset;\n  const ycords = modelToWorldOutput.dataset.reduce((acc, d) => {\n    acc.push(d[0]);\n    return acc;\n  }, []);\n\n  for (let i = 0; i + 1 < segmentCount; ++i) {\n    const line = regressionLines[i];\n    line.set({\n      stroke: ['red', 'green'][i % 2],\n      strokeWidth: 2,\n      objectCaching: false,\n      x1: pts[i][0],\n      y1: ycords[i],\n      x2: pts[i + 1][0],\n      y2: ycords[i + 1],\n    })\n  }\n  return result.cost;\n}\n\nfunction startSolve(fabricCanvas: fabric.Canvas, iterations: number, learningRate: number, degree: number) {\n  const trainingInputNormInfo = normalizeData(x_coords.map(d => [d]));\n  const trainingOutputNormInfo = normalizeData(y_coords.map(d => [d]))\n  trainingInfo.trainingData = trainingInputNormInfo.dataset.map(d => buildRowFromXCoord(d[0], degree));\n  trainingInfo.trainingOutput = trainingOutputNormInfo.dataset.reduce(\n    (acc, d) => {\n      acc.push(d[0])\n      return acc;\n    }, []);\n  trainingInfo.featureMeta = trainingInputNormInfo.featureMeta;\n  trainingInfo.outputMeta = trainingOutputNormInfo.featureMeta[0];\n  trainingInfo.coefficients = new Array(degree + 1).fill(0);\n  \n  // add UI info for fabric canvas\n  if (solveAnimationInfo.regressionLines.length === 0) {\n    for (let i = 0; i + 1 < solveAnimationInfo.segmentCount; ++i) {\n      solveAnimationInfo.regressionLines.push(new fabric.Line());\n      fabricCanvas.add(solveAnimationInfo.regressionLines[i]);\n    }\n    solveAnimationInfo.message = new fabric.Text(\"\");\n    fabricCanvas.add(solveAnimationInfo.message);\n  }\n  const updater = () => {\n    iterations--\n    solve(fabricCanvas, iterations, learningRate, degree);\n    fabricCanvas.renderAll();\n    if (iterations === 0) return;\n    solveAnimationInfo.animFrameId = window.requestAnimationFrame(updater);\n  };\n  updater();\n}\n\nfunction stopSolve() {\n  cancelAnimationFrame(solveAnimationInfo.animFrameId!);\n}\n\nconst RadioButton = styled.button<{ selected: boolean, color: string }>`\n  min-width: 30px;\n  min-height: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  color: ${props => props.color};\n  background: ${props => props.color};\n  border-radius: 50%;\n  border: ${props => `8px solid ${props.selected ? \"rgba(0, 0, 0, .5)\" : \"currentColor\"}`};\n`;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n`;\n\nconst SInput = styled(Input)``;\n\nconst Main = styled.div`\n  display: flex;\n  height: 100%;\n  ${SInput} > span {\n    width: 110px;\n  }\n`;\n\nfunction Regression() {\n  const ref = useRef(null);\n\n  const [fabricCanvas, setFabricCanvas] = useState<fabric.Canvas | null>(null);\n\n  const stateRef = useRef({ class: 'green' });\n\n  const reset = () => {\n    stopSolve();\n    x_coords = [];\n    y_coords = [];\n    solveAnimationInfo.regressionLines = [];\n    solveAnimationInfo.message = undefined;\n    if (fabricCanvas) {\n      // why this check, \n      // because reset is a closure, this method is called by useEffect hook during unmount\n      // as well as button reset\n      fabricCanvas.clear();\n    }\n  };\n\n  useEffect(() => {\n    const node : HTMLElement = ref.current!;\n    const canvas = document.createElement('canvas');\n    canvas.id = 'canvas';\n    node.append(canvas);\n    const bounds = node.getBoundingClientRect();\n    const fcanvas = new fabric.Canvas('canvas');\n    fcanvas.setWidth(bounds.width);\n    fcanvas.setHeight(bounds.height);\n    updateFabricCanvas(fcanvas, stateRef.current);\n    setFabricCanvas(fcanvas);\n    return () => {\n      reset();\n      fcanvas.dispose();\n    }\n  }, []);\n\n  const [cls, setClass] = useState('green');\n  const [iterations, setIterations] = useState(10000);\n  const [learningRate, setLearningRate] = useState(0.1);\n  const [degree, setDegree] = useState(1);\n\n  const changeClass = (cls : string) => {\n    const newClass = cls;\n    setClass(newClass);\n    stateRef.current.class = newClass;\n  }\n\n  const animSolve = () => {\n    if (x_coords.length === 0) {\n      alert(\"please add some points\");\n      return;\n    }\n    stopSolve();\n    startSolve(fabricCanvas!, iterations, learningRate, degree);\n  }\n\n  return (\n    <Main>\n      <div ref={ref} className={styles[\"fabric-wrapper\"]}>\n      </div>\n      <div className={styles.menu}>\n        <div className={styles['cls-buttons']}>\n          <RadioButton color=\"green\" selected={cls === \"green\"} onClick={() => changeClass('green')} />\n          <span>Click on middle window to create a point</span>\n        </div>\n        <div className={styles[\"action-buttons\"]}>\n          <Button onClick={animSolve}>Solve</Button>\n          <Button onClick={stopSolve}>Stop</Button>\n          <Button onClick={reset}>Reset</Button>\n        </div>\n        <SInput type=\"number\" label=\"Iterations\" value={\"\" + iterations} onChange={v => setIterations(+v)} />\n        <SInput type=\"number\" label=\"Learning Rate\" value={\"\" + learningRate} onChange={v => setLearningRate(+v)} />\n        <SInput type=\"number\" label=\"Degree\" value={\"\" + degree} onChange={v => setDegree(+v)} />\n      </div>\n    </Main>\n  );\n}\n\nexport default Regression","import * as MathJs from 'mathjs';\nimport { Row } from './common';\n\nconst hypothesis = (coefficients: Array<number>, datum: Row) => {\n  return MathJs.dot(coefficients, datum) >= 0 ? 1 : -1;\n};\n\nconst stepSolve = (coefficients: Array<number>, trainingSet: Array<Row>, output: Array<number>, learningRate: number) => {\n  const errorDelta: Array<number> = [];\n  let cost = 0;\n\n  let new_coefficients = [...coefficients];\n\n  for (let i = 0; i < trainingSet.length; ++i) {\n    const currentOutput = hypothesis(new_coefficients, trainingSet[i]);\n    const deltaOutput = currentOutput - output[i]; \n    if (deltaOutput === 0) continue;\n    console.log('error', i)\n    new_coefficients = MathJs.add(new_coefficients, MathJs.multiply(-learningRate * deltaOutput, trainingSet[i])) as Array<number>;\n    cost += errorDelta[i] * errorDelta[i];\n  }\n\n  return {\n    cost,\n    coefficients: new_coefficients\n  };\n};\n\nexport default stepSolve;\n\nexport {\n  hypothesis,\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport styled from 'styled-components';\n\nimport * as MathJs from 'mathjs';\n\nimport Input from \"../../components/Input\";\n\nimport stepSolve, { } from '../../engine/perceptron';\nimport { FeatureNormalizationMeta, Row, normalizeData, denormalizeData } from '../../engine/common';\n\nimport styles from './styles.module.scss';\n\nlet user_data : Array<Row> = [];\nlet user_output : Array<number> = [];\n\nfunction updateFabricCanvas(canvas: fabric.Canvas, state: { [key:string]: any }) {\n  const mouseDownHandler = (event: fabric.IEvent) => {\n    const x = event.pointer!.x;\n    const y = event.pointer!.y;\n    const r = 20;\n    user_data.push([x, y]);\n    user_output.push(state.class! === 'green' ? 1 : -1);\n    const circle = new fabric.Circle({\n      left: x - r / 2,\n      top: y - r / 2,\n      radius: 3,\n      stroke: state.class,\n      strokeWidth: r - 3,\n      fill: ''\n    });\n    canvas.add(circle);\n  };\n  canvas.on({\n    'mouse:down': mouseDownHandler\n  });\n}\n\ninterface TrainingInfo {\n  trainingData: Array<Row>;\n  trainingOutput: Array<number>;\n  coefficients: Array<number>;\n  featureMeta: FeatureNormalizationMeta;\n};\n\nconst trainingInfo: TrainingInfo = {\n  trainingData: [],\n  trainingOutput: [],\n  coefficients: [],\n  featureMeta: {}\n};\n\ninterface SolveAnimationInfo {\n  regressionLines: Array<fabric.Line>;\n  message?: fabric.Text;\n  animFrameId?: number;\n};\n\nconst solveAnimationInfo: SolveAnimationInfo = {\n  regressionLines: []\n};\n\nfunction buildFeatureVectorFromPoint(point: Array<number>) {\n  return [1, ...point, point[0] * point[0], point[1] * point[1]]\n}\n\nconst generatePointsFromCoefficients = (coefficients: Array<number>): { points1: Array<Row>, points2: Array<Row> } => {\n  // bias + ax + by + cx^2 + dy^2 = 0\n  const gety = (x: number) => {\n      const C = coefficients[0] + coefficients[1] * x + coefficients[3] * x * x;\n      const A = coefficients[4];\n      const B = coefficients[2];\n      const det = B * B - 4 * A * C;\n      if (det < 0) {\n        return [];\n      }\n      const f = Math.sqrt(det);\n      return [\n        [x, (-B + f) / (2 * A)],\n        [x, (-B - f) / (2 * A)]\n      ];\n  };\n  const points: Array<Array<Array<number>>> = [[]];\n  const pointsRev: Array<Array<Array<number>>> = [[]];\n  let k = 0;\n  \n  for (let x = -10 ; x <= 10; x += 0.005) {\n    const pts = gety(x);\n    if (pts.length > 0) {\n      points[k].push(pts[0]);\n      if (pts[1]) pointsRev[k].push(pts[1])\n    } else if (points.length === 1) {\n      // breakpoint region with no solution (for hyperbola)\n      points.push([]);\n      pointsRev.push([]);\n      k++;\n    }\n  }\n  const merge = (pointsA: Array<Array<number>>, pointsB: Array<Array<number>>) => {\n    if (pointsB.length !== pointsA.length || pointsA.length === 0) return pointsA;\n    const dist1 = MathJs.distance(pointsA[0], pointsB[0]);\n    const dist2 = MathJs.distance(pointsA[pointsA.length - 1], pointsB[pointsB.length - 1]);\n    if (dist1 < dist2) {\n      return pointsA.reverse().concat(pointsB);\n    }\n    return pointsA.concat(pointsB.reverse());\n  };\n  return {\n    points1: merge(points[0], pointsRev[0]),\n    points2: points.length < 2 ? [] : merge(points[1], pointsRev[1])\n  }\n}\n\nfunction solve(fabricCanvas: fabric.Canvas, iterationsLeft: number, learningRate: number) {\n  const { trainingData, trainingOutput, coefficients, featureMeta } = trainingInfo;\n  const result = stepSolve(coefficients, trainingData, trainingOutput, learningRate);\n  trainingInfo.coefficients = result.coefficients;\n\n  const { regressionLines } = solveAnimationInfo;\n\n  solveAnimationInfo.message!.set({\n    text: `Iterations Left: ${iterationsLeft}`\n  });\n\n  while (regressionLines.length) fabricCanvas.remove(regressionLines.pop()!);\n\n  const pointInfo = generatePointsFromCoefficients(trainingInfo.coefficients);\n\n  const data = [pointInfo.points1, pointInfo.points2];\n\n  data.forEach(points => {\n    const boundaryInfo = denormalizeData(points, featureMeta);\n    points.forEach((_, i) => {\n      if (i === 0) return;\n      const pt1 = boundaryInfo.dataset[i];\n      const pt2 = boundaryInfo.dataset[i - 1];\n      const line = new fabric.Line();\n      regressionLines.push(line);\n      fabricCanvas.add(line);\n      line.set({\n        stroke: ['red', 'green'][i % 2],\n        strokeWidth: 2,\n        objectCaching: false,\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1],\n      })\n    });\n  })\n  \n  return result.cost;\n}\n\nfunction startSolve(fabricCanvas: fabric.Canvas, iterations: number, learningRate: number) {\n  const featureCount = buildFeatureVectorFromPoint([0, 0]).length;\n  \n  const normInfo = normalizeData(user_data);\n  trainingInfo.trainingData = normInfo.dataset.map(buildFeatureVectorFromPoint);\n  trainingInfo.trainingOutput = user_output;\n  trainingInfo.featureMeta = normInfo.featureMeta;\n  trainingInfo.coefficients = new Array(featureCount).fill(0);\n  \n  // add UI info for fabric canvas\n  if (!solveAnimationInfo.message) {\n    solveAnimationInfo.message = new fabric.Text(\"\");\n    fabricCanvas.add(solveAnimationInfo.message);\n  }\n\n  const updater = () => {\n    iterations--\n    solve(fabricCanvas, iterations, learningRate);\n    fabricCanvas.renderAll();\n    if (iterations === 0) return;\n    solveAnimationInfo.animFrameId = window.requestAnimationFrame(updater);\n  };\n  updater();\n}\n\nfunction stopSolve() {\n  cancelAnimationFrame(solveAnimationInfo.animFrameId!);\n}\n\nconst RadioButton = styled.button<{ selected: boolean, color: string }>`\n  min-width: 30px;\n  min-height: 30px;\n  max-width: 30px;\n  max-height: 30px;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  color: ${props => props.color};\n  background: ${props => props.color};\n  border-radius: 50%;\n  border: ${props => `8px solid ${props.selected ? \"rgba(0, 0, 0, .5)\" : \"currentColor\"}`};\n`;\n\nconst SInput = styled(Input)``;\n\nconst Button = styled.button`\n  padding: 10px 20px;\n`;\n\nconst Main = styled.div`\n  display: flex;\n  height: 100%;\n  ${SInput} span {\n    width: 110px;\n  }\n`;\n\nfunction Perceptron() {\n  const ref = useRef(null);\n\n  const [fabricCanvas, setFabricCanvas] = useState<fabric.Canvas | null>(null);\n\n  const stateRef = useRef({ class: 'green' });\n\n  const reset = () => {\n    stopSolve();\n    user_data = [];\n    user_output = [];\n    solveAnimationInfo.regressionLines = [];\n    solveAnimationInfo.message = undefined;\n    if (fabricCanvas) {\n      // why this check, \n      // because reset is a closure, this method is called by useEffect hook during unmount\n      // as well as button reset\n      fabricCanvas.clear();\n    }\n  };\n\n  useEffect(() => {\n    const node: HTMLElement = ref.current!;\n    const canvas = document.createElement('canvas');\n    canvas.id = 'canvas';\n    node.append(canvas);\n    const bounds = node.getBoundingClientRect();\n    const fcanvas = new fabric.Canvas('canvas');\n    fcanvas.setWidth(bounds.width);\n    fcanvas.setHeight(bounds.height);\n    updateFabricCanvas(fcanvas, stateRef.current);\n    setFabricCanvas(fcanvas);\n    return () => {\n      reset();\n      fcanvas.dispose();\n    }\n  }, []);\n\n  const [cls, setClass] = useState('green');\n  const [iterations, setIterations] = useState(10000);\n  const [learningRate, setLearningRate] = useState(0.001);\n\n  const changeClass = (cls: string) => {\n    const newClass = cls;\n    setClass(newClass);\n    stateRef.current.class = newClass;\n  }\n\n  const animSolve = () => {\n    if (user_data.length === 0) {\n      alert(\"please add some points\");\n      return;\n    }\n    const pos = user_output.filter(d => d === 1).length;\n    const neg = user_output.length - pos;\n    if (pos === 0 || neg === 0) {\n      alert(\"training set must contain both red and green classes\");\n      return;\n    }\n    stopSolve();\n    startSolve(fabricCanvas!, iterations, learningRate);\n  }\n\n  return (\n    <Main>\n      <div ref={ref} className={styles[\"fabric-wrapper\"]}>\n      </div>\n      <div className={styles.menu}>\n        <div className={styles['cls-buttons']}>\n          <RadioButton color=\"green\" selected={cls === \"green\"} onClick={() => changeClass('green')} />\n          <RadioButton color=\"red\" selected={cls === \"red\"} onClick={() => changeClass('red')} />\n          <span>Select the class and <br></br>click on middle window to drop</span>\n        </div>\n        <div className={styles[\"action-buttons\"]}>\n          <Button onClick={animSolve}>Solve</Button>\n          <Button onClick={stopSolve}>Stop</Button>\n          <Button onClick={reset}>Reset</Button>\n        </div>\n        <SInput type=\"number\" label=\"Iterations\" value={\"\" + iterations} onChange={v => setIterations(+v)} />\n        <SInput type=\"number\" label=\"Learning Rate\" value={\"\" + learningRate} onChange={v => setLearningRate(+v)} />\n      </div>\n    </Main>\n  );\n}\n\nexport default Perceptron\n","import React, { useState, useRef, useEffect } from 'react';\nimport { fabric } from 'fabric';\nimport * as MathJs from 'mathjs';\nimport styled from 'styled-components';\n\nimport Input from \"../../components/Input\";\n\nimport styles from './styles.module.scss';\n\nconst SInput = styled(Input)`\n  > span {\n    width: 80px;\n  }\n  > input {\n    flex: 1;\n  }\n`;\n\nconst Main = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nconst ActionButtons = styled.div`\n  > span {\n    display: block;\n    margin-top: 5px;\n    margin-left: 90px;\n  }\n  > * + * {\n    margin-top: 20px;\n  }\n`;\n\nlet line: fabric.Line;\nlet perpendicular: fabric.Line;\n\nconst drawAxes = (fabricCanvas: fabric.Canvas) => {\n  const width = fabricCanvas.getWidth();\n  const height = fabricCanvas.getHeight();\n  \n  const xAxis = new fabric.Line();\n  xAxis.set({\n    stroke: 'green',\n    strokeWidth: 2,\n    objectCaching: false,\n    x1: 0,\n    y1: height / 2,\n    x2: width,\n    y2: height / 2\n  })\n  fabricCanvas.add(xAxis);\n\n  const yAxis = new fabric.Line();\n  yAxis.set({\n    stroke: 'green',\n    strokeWidth: 2,\n    objectCaching: false,\n    x1: width / 2,\n    y1: 0,\n    x2: width / 2,\n    y2: height\n  })\n  fabricCanvas.add(yAxis);\n};\n\nconst updateLine = (fabricCanvas: fabric.Canvas, angle: number, distance: number) => {\n  const width = fabricCanvas.getWidth();\n  const height = fabricCanvas.getHeight();\n  const radians = Math.PI * angle / 180;\n  const length = Math.hypot(width, height);\n  const w = [Math.cos(-radians), Math.sin(-radians)];\n  const screenCenter = [width / 2, height / 2];\n  const lineMid = MathJs.add(screenCenter, MathJs.multiply(w, distance)) as Array<number>;\n  const rotated = MathJs.multiply([-w[1], w[0]], length / 2);\n  const leftPoint = MathJs.add(lineMid, rotated) as Array<number>\n  const rightPoint = MathJs.subtract(lineMid, rotated) as Array<number>\n  line.set({\n    stroke: 'blue',\n    strokeWidth: 3,\n    objectCaching: false,\n    x1: leftPoint[0],\n    y1: leftPoint[1],\n    x2: rightPoint[0],\n    y2: rightPoint[1]\n  })\n  perpendicular.set({\n    stroke: 'black',\n    strokeWidth: 1,\n    objectCaching: false,\n    x1: screenCenter[0],\n    y1: screenCenter[1],\n    x2: lineMid[0],\n    y2: lineMid[1]\n  })\n  fabricCanvas.renderAll();\n}\n\nfunction Line() {\n  const ref = useRef(null);\n\n  const [fabricCanvas, setFabricCanvas] = useState<fabric.Canvas | null>(null);\n  const [angle, setAngle] = useState(45);\n  const [distance, setDistance] = useState(300);\n\n  const [sliderRange] = useState(Math.floor(Math.hypot(window.innerHeight, window.innerWidth) / 2));\n\n  const changeAngle = (d: number) => {\n    setAngle(d);\n    updateLine(fabricCanvas!, d, distance);\n  }\n\n  const changeDistance = (d: number) => {\n    setDistance(d);\n    updateLine(fabricCanvas!, angle, d);\n  }\n\n  useEffect(() => {\n    const node : HTMLElement = ref.current!;\n    const canvas = document.createElement('canvas');\n    canvas.id = 'canvas';\n    node.append(canvas);\n    const bounds = node.getBoundingClientRect();\n    const fcanvas = new fabric.Canvas('canvas');\n    fcanvas.setWidth(bounds.width);\n    fcanvas.setHeight(bounds.height);\n    setFabricCanvas(fcanvas);\n    drawAxes(fcanvas);\n    line = new fabric.Line();\n    fcanvas.add(line);\n    perpendicular = new fabric.Line();\n    fcanvas.add(perpendicular);\n    updateLine(fcanvas, angle, distance);\n    return () => {\n      fcanvas.dispose();\n    }\n  }, []);\n\n  return (\n    <Main>\n      <div ref={ref} className={styles[\"fabric-wrapper\"]}>\n      </div>\n      <div className={styles.menu}>\n        <div className={styles['cls-buttons']}>\n          <span>A line can be described using an angle <br /> for orientation and distance from origin</span>\n        </div>\n        <ActionButtons>\n          <SInput label=\"Angle\" type=\"range\" value={\"\" + angle} min=\"0\" max=\"360\" onChange={e => changeAngle(+e)} />\n          <span>{angle} degrees</span>\n          <SInput label=\"Distance\" type=\"range\" value={\"\" + distance} min={\"\" + -sliderRange} max={\"\" + sliderRange} onChange={e => changeDistance(+e)} />\n          <span>{distance} px</span>\n        </ActionButtons>\n      </div>\n    </Main>\n  );\n}\n\nexport default Line\n","import React, { useState } from 'react';\n\nimport MenuSelect from './components/MenuSelect';\nimport Regression from './pages/Regression';\nimport Perceptron from './pages/Perceptron';\nimport Line from './pages/Line';\n\nimport styled from 'styled-components';\n\nconst GridContainer = styled.div`\n  display: grid;\n  width: 100vw;\n  height: 100vh;\n  grid-template-areas:\n  'header header'\n  'nav main';\n  grid-template-columns: auto 1fr;\n  grid-template-rows: auto 1fr;\n  grid-gap: 0px;\n\n  header {\n    grid-area: header;\n    background: lightblue;\n    box-shadow: 0px 1px 2px black;\n  }\n\n  nav {\n    grid-area: nav;\n    box-shadow: 0px 1px 2px black;\n  }\n\n  main {\n    grid-area: main;\n  }\n\n  header, nav {\n    padding: 10px;\n  }\n`;\n\nfunction App() {\n  const [selectedChoice, setSelectedChoice] = useState('line');\n  return (\n    <GridContainer>\n      <header>\n        <h1>Machine Learning from Scratch</h1>\n      </header>\n      <nav>\n        <MenuSelect\n          selectedChoice={selectedChoice}\n          clickHandler={\n            (item: string) => {\n              setSelectedChoice(item);\n            }\n          }\n          choices={\n            [\n              {\n                id: \"line\",\n                label: \"Equation of Line\",\n                path: \"/line_equation\"\n              },\n              {\n                id: \"regression\",\n                label: \"Regression\",\n                path: \"/regression\"\n              },\n              {\n                id: \"perceptron\",\n                label: \"Perceptron\",\n                path: \"/perceptron\"\n              }\n            ]\n          }\n        />\n      </nav>\n      <main>\n        {selectedChoice === 'line' && <Line />}\n        {selectedChoice === 'regression' && <Regression />}\n        {selectedChoice === 'perceptron' && <Perceptron />}\n      </main>\n    </GridContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fabric-wrapper\":\"styles_fabric-wrapper__3GokR\",\"menu\":\"styles_menu__2e9qZ\",\"cls-buttons\":\"styles_cls-buttons__2evW2\",\"action-buttons\":\"styles_action-buttons__1-DFx\"};"],"sourceRoot":""}